name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g. 1.2.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate version input
        run: |
          set -euo pipefail
          VERSION="${{ inputs.version }}"
          if [[ "$VERSION" == v* ]]; then
            echo "Release version must not start with 'v'."
            exit 1
          fi
          if [[ ! "$VERSION" =~ ^[0-9]+(\.[0-9]+){2}(-[0-9A-Za-z.-]+)?$ ]]; then
            echo "Release version must follow semantic versioning (e.g. 1.2.3)."
            exit 1
          fi

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Sync version files
        run: ./scripts/sync-versions.sh

      - name: Regenerate types
        working-directory: packages/gql
        run: bun run generate

      - name: Package artifacts
        run: |
          mkdir -p artifacts
          zip -j artifacts/openiap-typescript.zip packages/gql/src/generated/types.ts
          zip -j artifacts/openiap-dart.zip packages/gql/dist/dart/types.dart
          zip -j artifacts/openiap-kotlin.zip packages/gql/dist/kotlin/Types.kt
          zip -j artifacts/openiap-swift.zip packages/gql/dist/swift/Types.swift

      - name: Create Git tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v${{ inputs.version }}" -m "Release v${{ inputs.version }}"
          git push origin "v${{ inputs.version }}"

      - name: Publish release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ inputs.version }}
          name: v${{ inputs.version }}
          files: |
            artifacts/openiap-typescript.zip
            artifacts/openiap-dart.zip
            artifacts/openiap-kotlin.zip
            artifacts/openiap-swift.zip
          generate_release_notes: true
          body: |
            ## OpenIAP v${{ inputs.version }}

            ### Artifacts
            This release includes autogenerated types for multiple platforms:
            - **TypeScript**: `openiap-typescript.zip`
            - **Dart**: `openiap-dart.zip`
            - **Kotlin**: `openiap-kotlin.zip`
            - **Swift**: `openiap-swift.zip`

            ### Usage in other projects
            You can download these artifacts and use them in:
            - react-native-iap
            - expo-iap
            - Any other project that needs OpenIAP types

            ### Documentation
            - [Documentation](https://openiap.dev)
            - [GitHub Repository](https://github.com/hyodotdev/openiap)
